services:
  # SQL Server service
  db:
    image: mcr.microsoft.com/azure-sql-edge:latest
    container_name: blog_db
    restart: always
    user: "0:0"  # Run as root to avoid permission issues
    secrets:
      - db_password
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD_FILE=/run/secrets/db_password
    ports:
      - "1433:1433"
    volumes:
      - db-data:/var/opt/mssql
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "$$(cat /run/secrets/db_password)", "-Q", "SELECT 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - blog-network

  # ASP.NET Core API with Angular Frontend
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_CONFIGURATION=Release
    container_name: blog_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnectionString=Server=db,1433;Database=MyBlogPostDb;User Id=sa;Password=$${DB_PASSWORD};TrustServerCertificate=true;
    ports:
      - "8080:80"
    secrets:
      - db_password
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        export DB_PASSWORD=$$(cat /run/secrets/db_password)
        # Run the application
        dotnet Blog.WebApi.dll
    networks:
      - blog-network

volumes:
  db-data:
    name: blog-db-data

networks:
  blog-network:
    name: blog-network
    driver: bridge

secrets:
  db_password:
    file: ./secrets/db_password.txt

